Grammar

    0 $accept: Program $end

    1 Program: ε
    2        | Program FuncDecl

    3 FuncDecl: RetType FuncName '(' Args ')' '{' VarDecls Stmts '}'

    4 RetType: T_Int
    5        | T_Flt
    6        | T_Void

    7 FuncName: T_Identifier

    8 Args: ε
    9     | _Args

   10 _Args: T_Int T_Identifier
   11      | _Args ',' T_Int T_Identifier
   12      | T_Flt T_Identifier
   13      | _Args ',' T_Flt T_Identifier

   14 VarDecls: ε
   15         | VarDecls VarDecl ';'

   16 VarDecl: T_Int T_Identifier
   17        | T_Flt T_Identifier
   18        | VarDecl ',' T_Identifier

   19 Stmts: ε
   20      | Stmts Stmt

   21 Stmt: AssignStmt
   22     | PrintStmt
   23     | CallStmt
   24     | ReturnStmt
   25     | IfStmt
   26     | WhileStmt
   27     | BreakStmt
   28     | ContinueStmt

   29 AssignStmt: T_Identifier '=' Expr ';'

   30 PrintStmt: T_Print '(' T_StringConstant PActuals ')' ';'

   31 PActuals: ε
   32         | PActuals ',' Expr

   33 CallStmt: CallExpr ';'

   34 CallExpr: T_Identifier '(' Actuals ')'

   35 Actuals: ε
   36        | Expr PActuals

   37 ReturnStmt: T_Return Expr ';'
   38           | T_Return ';'

   39 IfStmt: If TestExpr Then StmtsBlock EndThen EndIf
   40       | If TestExpr Then StmtsBlock EndThen Else StmtsBlock EndIf

   41 TestExpr: '(' Expr ')'

   42 StmtsBlock: '{' Stmts '}'

   43 If: T_If

   44 Then: ε

   45 EndThen: ε

   46 Else: T_Else

   47 EndIf: ε

   48 WhileStmt: While TestExpr Do StmtsBlock EndWhile

   49 While: T_While

   50 Do: ε

   51 EndWhile: ε

   52 BreakStmt: T_Break ';'

   53 ContinueStmt: T_Continue ';'

   54 Expr: Expr '+' Expr
   55     | Expr '-' Expr
   56     | Expr '*' Expr
   57     | Expr '/' Expr
   58     | Expr '%' Expr
   59     | Expr '>' Expr
   60     | Expr '<' Expr
   61     | Expr T_Ge Expr
   62     | Expr T_Le Expr
   63     | Expr T_Eq Expr
   64     | Expr T_Ne Expr
   65     | Expr T_Or Expr
   66     | Expr T_And Expr
   67     | '-' Expr
   68     | '!' Expr
   69     | T_IntConstant
   70     | T_FltConstant
   71     | T_Identifier
   72     | ReadInt
   73     | CallExpr
   74     | '(' Expr ')'

   75 ReadInt: T_ReadInt '(' T_StringConstant ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 68
    '%' (37) 58
    '(' (40) 3 30 34 41 74 75
    ')' (41) 3 30 34 41 74 75
    '*' (42) 56
    '+' (43) 54
    ',' (44) 11 13 18 32
    '-' (45) 55 67
    '/' (47) 57
    ';' (59) 15 29 30 33 37 38 52 53
    '<' (60) 60
    '=' (61) 29
    '>' (62) 59
    '{' (123) 3 42
    '}' (125) 3 42
    error (256)
    T_Int (258) 4 10 11 16
    T_Void (259) 6
    T_Flt (260) 5 12 13 17
    T_Return (261) 37 38
    T_Print (262) 30
    T_ReadInt (263) 75
    T_While (264) 49
    T_If (265) 43
    T_Else (266) 46
    T_Break (267) 52
    T_Continue (268) 53
    T_Le (269) 62
    T_Ge (270) 61
    T_Eq (271) 63
    T_Ne (272) 64
    T_And (273) 66
    T_Or (274) 65
    T_IntConstant (275) 69
    T_FltConstant (276) 70
    T_StringConstant (277) 30 75
    T_Identifier (278) 7 10 11 12 13 16 17 18 29 34 71


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    Program (40)
        on left: 1 2
        on right: 0 2
    FuncDecl (41)
        on left: 3
        on right: 2
    RetType (42)
        on left: 4 5 6
        on right: 3
    FuncName (43)
        on left: 7
        on right: 3
    Args (44)
        on left: 8 9
        on right: 3
    _Args (45)
        on left: 10 11 12 13
        on right: 9 11 13
    VarDecls (46)
        on left: 14 15
        on right: 3 15
    VarDecl (47)
        on left: 16 17 18
        on right: 15 18
    Stmts (48)
        on left: 19 20
        on right: 3 20 42
    Stmt (49)
        on left: 21 22 23 24 25 26 27 28
        on right: 20
    AssignStmt (50)
        on left: 29
        on right: 21
    PrintStmt (51)
        on left: 30
        on right: 22
    PActuals (52)
        on left: 31 32
        on right: 30 32 36
    CallStmt (53)
        on left: 33
        on right: 23
    CallExpr (54)
        on left: 34
        on right: 33 73
    Actuals (55)
        on left: 35 36
        on right: 34
    ReturnStmt (56)
        on left: 37 38
        on right: 24
    IfStmt (57)
        on left: 39 40
        on right: 25
    TestExpr (58)
        on left: 41
        on right: 39 40 48
    StmtsBlock (59)
        on left: 42
        on right: 39 40 48
    If (60)
        on left: 43
        on right: 39 40
    Then (61)
        on left: 44
        on right: 39 40
    EndThen (62)
        on left: 45
        on right: 39 40
    Else (63)
        on left: 46
        on right: 40
    EndIf (64)
        on left: 47
        on right: 39 40
    WhileStmt (65)
        on left: 48
        on right: 26
    While (66)
        on left: 49
        on right: 48
    Do (67)
        on left: 50
        on right: 48
    EndWhile (68)
        on left: 51
        on right: 48
    BreakStmt (69)
        on left: 52
        on right: 27
    ContinueStmt (70)
        on left: 53
        on right: 28
    Expr (71)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 29 32 36 37 41 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 74
    ReadInt (72)
        on left: 75
        on right: 72


State 0

    0 $accept: • Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


State 1

    0 $accept: Program • $end
    2 Program: Program • FuncDecl

    $end    shift, and go to state 2
    T_Int   shift, and go to state 3
    T_Void  shift, and go to state 4
    T_Flt   shift, and go to state 5

    FuncDecl  go to state 6
    RetType   go to state 7


State 2

    0 $accept: Program $end •

    $default  accept


State 3

    4 RetType: T_Int •

    $default  reduce using rule 4 (RetType)


State 4

    6 RetType: T_Void •

    $default  reduce using rule 6 (RetType)


State 5

    5 RetType: T_Flt •

    $default  reduce using rule 5 (RetType)


State 6

    2 Program: Program FuncDecl •

    $default  reduce using rule 2 (Program)


State 7

    3 FuncDecl: RetType • FuncName '(' Args ')' '{' VarDecls Stmts '}'

    T_Identifier  shift, and go to state 8

    FuncName  go to state 9


State 8

    7 FuncName: T_Identifier •

    $default  reduce using rule 7 (FuncName)


State 9

    3 FuncDecl: RetType FuncName • '(' Args ')' '{' VarDecls Stmts '}'

    '('  shift, and go to state 10


State 10

    3 FuncDecl: RetType FuncName '(' • Args ')' '{' VarDecls Stmts '}'

    T_Int  shift, and go to state 11
    T_Flt  shift, and go to state 12

    $default  reduce using rule 8 (Args)

    Args   go to state 13
    _Args  go to state 14


State 11

   10 _Args: T_Int • T_Identifier

    T_Identifier  shift, and go to state 15


State 12

   12 _Args: T_Flt • T_Identifier

    T_Identifier  shift, and go to state 16


State 13

    3 FuncDecl: RetType FuncName '(' Args • ')' '{' VarDecls Stmts '}'

    ')'  shift, and go to state 17


State 14

    9 Args: _Args •
   11 _Args: _Args • ',' T_Int T_Identifier
   13      | _Args • ',' T_Flt T_Identifier

    ','  shift, and go to state 18

    $default  reduce using rule 9 (Args)


State 15

   10 _Args: T_Int T_Identifier •

    $default  reduce using rule 10 (_Args)


State 16

   12 _Args: T_Flt T_Identifier •

    $default  reduce using rule 12 (_Args)


State 17

    3 FuncDecl: RetType FuncName '(' Args ')' • '{' VarDecls Stmts '}'

    '{'  shift, and go to state 19


State 18

   11 _Args: _Args ',' • T_Int T_Identifier
   13      | _Args ',' • T_Flt T_Identifier

    T_Int  shift, and go to state 20
    T_Flt  shift, and go to state 21


State 19

    3 FuncDecl: RetType FuncName '(' Args ')' '{' • VarDecls Stmts '}'

    $default  reduce using rule 14 (VarDecls)

    VarDecls  go to state 22


State 20

   11 _Args: _Args ',' T_Int • T_Identifier

    T_Identifier  shift, and go to state 23


State 21

   13 _Args: _Args ',' T_Flt • T_Identifier

    T_Identifier  shift, and go to state 24


State 22

    3 FuncDecl: RetType FuncName '(' Args ')' '{' VarDecls • Stmts '}'
   15 VarDecls: VarDecls • VarDecl ';'

    T_Int  shift, and go to state 25
    T_Flt  shift, and go to state 26

    $default  reduce using rule 19 (Stmts)

    VarDecl  go to state 27
    Stmts    go to state 28


State 23

   11 _Args: _Args ',' T_Int T_Identifier •

    $default  reduce using rule 11 (_Args)


State 24

   13 _Args: _Args ',' T_Flt T_Identifier •

    $default  reduce using rule 13 (_Args)


State 25

   16 VarDecl: T_Int • T_Identifier

    T_Identifier  shift, and go to state 29


State 26

   17 VarDecl: T_Flt • T_Identifier

    T_Identifier  shift, and go to state 30


State 27

   15 VarDecls: VarDecls VarDecl • ';'
   18 VarDecl: VarDecl • ',' T_Identifier

    ','  shift, and go to state 31
    ';'  shift, and go to state 32


State 28

    3 FuncDecl: RetType FuncName '(' Args ')' '{' VarDecls Stmts • '}'
   20 Stmts: Stmts • Stmt

    T_Return      shift, and go to state 33
    T_Print       shift, and go to state 34
    T_While       shift, and go to state 35
    T_If          shift, and go to state 36
    T_Break       shift, and go to state 37
    T_Continue    shift, and go to state 38
    T_Identifier  shift, and go to state 39
    '}'           shift, and go to state 40

    Stmt          go to state 41
    AssignStmt    go to state 42
    PrintStmt     go to state 43
    CallStmt      go to state 44
    CallExpr      go to state 45
    ReturnStmt    go to state 46
    IfStmt        go to state 47
    If            go to state 48
    WhileStmt     go to state 49
    While         go to state 50
    BreakStmt     go to state 51
    ContinueStmt  go to state 52


State 29

   16 VarDecl: T_Int T_Identifier •

    $default  reduce using rule 16 (VarDecl)


State 30

   17 VarDecl: T_Flt T_Identifier •

    $default  reduce using rule 17 (VarDecl)


State 31

   18 VarDecl: VarDecl ',' • T_Identifier

    T_Identifier  shift, and go to state 53


State 32

   15 VarDecls: VarDecls VarDecl ';' •

    $default  reduce using rule 15 (VarDecls)


State 33

   37 ReturnStmt: T_Return • Expr ';'
   38           | T_Return • ';'

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60
    ';'            shift, and go to state 61

    CallExpr  go to state 62
    Expr      go to state 63
    ReadInt   go to state 64


State 34

   30 PrintStmt: T_Print • '(' T_StringConstant PActuals ')' ';'

    '('  shift, and go to state 65


State 35

   49 While: T_While •

    $default  reduce using rule 49 (While)


State 36

   43 If: T_If •

    $default  reduce using rule 43 (If)


State 37

   52 BreakStmt: T_Break • ';'

    ';'  shift, and go to state 66


State 38

   53 ContinueStmt: T_Continue • ';'

    ';'  shift, and go to state 67


State 39

   29 AssignStmt: T_Identifier • '=' Expr ';'
   34 CallExpr: T_Identifier • '(' Actuals ')'

    '='  shift, and go to state 68
    '('  shift, and go to state 69


State 40

    3 FuncDecl: RetType FuncName '(' Args ')' '{' VarDecls Stmts '}' •

    $default  reduce using rule 3 (FuncDecl)


State 41

   20 Stmts: Stmts Stmt •

    $default  reduce using rule 20 (Stmts)


State 42

   21 Stmt: AssignStmt •

    $default  reduce using rule 21 (Stmt)


State 43

   22 Stmt: PrintStmt •

    $default  reduce using rule 22 (Stmt)


State 44

   23 Stmt: CallStmt •

    $default  reduce using rule 23 (Stmt)


State 45

   33 CallStmt: CallExpr • ';'

    ';'  shift, and go to state 70


State 46

   24 Stmt: ReturnStmt •

    $default  reduce using rule 24 (Stmt)


State 47

   25 Stmt: IfStmt •

    $default  reduce using rule 25 (Stmt)


State 48

   39 IfStmt: If • TestExpr Then StmtsBlock EndThen EndIf
   40       | If • TestExpr Then StmtsBlock EndThen Else StmtsBlock EndIf

    '('  shift, and go to state 71

    TestExpr  go to state 72


State 49

   26 Stmt: WhileStmt •

    $default  reduce using rule 26 (Stmt)


State 50

   48 WhileStmt: While • TestExpr Do StmtsBlock EndWhile

    '('  shift, and go to state 71

    TestExpr  go to state 73


State 51

   27 Stmt: BreakStmt •

    $default  reduce using rule 27 (Stmt)


State 52

   28 Stmt: ContinueStmt •

    $default  reduce using rule 28 (Stmt)


State 53

   18 VarDecl: VarDecl ',' T_Identifier •

    $default  reduce using rule 18 (VarDecl)


State 54

   75 ReadInt: T_ReadInt • '(' T_StringConstant ')'

    '('  shift, and go to state 74


State 55

   69 Expr: T_IntConstant •

    $default  reduce using rule 69 (Expr)


State 56

   70 Expr: T_FltConstant •

    $default  reduce using rule 70 (Expr)


State 57

   34 CallExpr: T_Identifier • '(' Actuals ')'
   71 Expr: T_Identifier •

    '('  shift, and go to state 69

    $default  reduce using rule 71 (Expr)


State 58

   67 Expr: '-' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 75
    ReadInt   go to state 64


State 59

   68 Expr: '!' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 76
    ReadInt   go to state 64


State 60

   74 Expr: '(' • Expr ')'

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 77
    ReadInt   go to state 64


State 61

   38 ReturnStmt: T_Return ';' •

    $default  reduce using rule 38 (ReturnStmt)


State 62

   73 Expr: CallExpr •

    $default  reduce using rule 73 (Expr)


State 63

   37 ReturnStmt: T_Return Expr • ';'
   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    T_Le   shift, and go to state 78
    T_Ge   shift, and go to state 79
    T_Eq   shift, and go to state 80
    T_Ne   shift, and go to state 81
    T_And  shift, and go to state 82
    T_Or   shift, and go to state 83
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87
    '*'    shift, and go to state 88
    '/'    shift, and go to state 89
    '%'    shift, and go to state 90
    ';'    shift, and go to state 91


State 64

   72 Expr: ReadInt •

    $default  reduce using rule 72 (Expr)


State 65

   30 PrintStmt: T_Print '(' • T_StringConstant PActuals ')' ';'

    T_StringConstant  shift, and go to state 92


State 66

   52 BreakStmt: T_Break ';' •

    $default  reduce using rule 52 (BreakStmt)


State 67

   53 ContinueStmt: T_Continue ';' •

    $default  reduce using rule 53 (ContinueStmt)


State 68

   29 AssignStmt: T_Identifier '=' • Expr ';'

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 93
    ReadInt   go to state 64


State 69

   34 CallExpr: T_Identifier '(' • Actuals ')'

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    $default  reduce using rule 35 (Actuals)

    CallExpr  go to state 62
    Actuals   go to state 94
    Expr      go to state 95
    ReadInt   go to state 64


State 70

   33 CallStmt: CallExpr ';' •

    $default  reduce using rule 33 (CallStmt)


State 71

   41 TestExpr: '(' • Expr ')'

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 96
    ReadInt   go to state 64


State 72

   39 IfStmt: If TestExpr • Then StmtsBlock EndThen EndIf
   40       | If TestExpr • Then StmtsBlock EndThen Else StmtsBlock EndIf

    $default  reduce using rule 44 (Then)

    Then  go to state 97


State 73

   48 WhileStmt: While TestExpr • Do StmtsBlock EndWhile

    $default  reduce using rule 50 (Do)

    Do  go to state 98


State 74

   75 ReadInt: T_ReadInt '(' • T_StringConstant ')'

    T_StringConstant  shift, and go to state 99


State 75

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr
   67     | '-' Expr •

    $default  reduce using rule 67 (Expr)


State 76

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr
   68     | '!' Expr •

    $default  reduce using rule 68 (Expr)


State 77

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr
   74     | '(' Expr • ')'

    T_Le   shift, and go to state 78
    T_Ge   shift, and go to state 79
    T_Eq   shift, and go to state 80
    T_Ne   shift, and go to state 81
    T_And  shift, and go to state 82
    T_Or   shift, and go to state 83
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87
    '*'    shift, and go to state 88
    '/'    shift, and go to state 89
    '%'    shift, and go to state 90
    ')'    shift, and go to state 100


State 78

   62 Expr: Expr T_Le • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 101
    ReadInt   go to state 64


State 79

   61 Expr: Expr T_Ge • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 102
    ReadInt   go to state 64


State 80

   63 Expr: Expr T_Eq • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 103
    ReadInt   go to state 64


State 81

   64 Expr: Expr T_Ne • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 104
    ReadInt   go to state 64


State 82

   66 Expr: Expr T_And • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 105
    ReadInt   go to state 64


State 83

   65 Expr: Expr T_Or • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 106
    ReadInt   go to state 64


State 84

   60 Expr: Expr '<' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 107
    ReadInt   go to state 64


State 85

   59 Expr: Expr '>' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 108
    ReadInt   go to state 64


State 86

   54 Expr: Expr '+' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 109
    ReadInt   go to state 64


State 87

   55 Expr: Expr '-' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 110
    ReadInt   go to state 64


State 88

   56 Expr: Expr '*' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 111
    ReadInt   go to state 64


State 89

   57 Expr: Expr '/' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 112
    ReadInt   go to state 64


State 90

   58 Expr: Expr '%' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 113
    ReadInt   go to state 64


State 91

   37 ReturnStmt: T_Return Expr ';' •

    $default  reduce using rule 37 (ReturnStmt)


State 92

   30 PrintStmt: T_Print '(' T_StringConstant • PActuals ')' ';'

    $default  reduce using rule 31 (PActuals)

    PActuals  go to state 114


State 93

   29 AssignStmt: T_Identifier '=' Expr • ';'
   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    T_Le   shift, and go to state 78
    T_Ge   shift, and go to state 79
    T_Eq   shift, and go to state 80
    T_Ne   shift, and go to state 81
    T_And  shift, and go to state 82
    T_Or   shift, and go to state 83
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87
    '*'    shift, and go to state 88
    '/'    shift, and go to state 89
    '%'    shift, and go to state 90
    ';'    shift, and go to state 115


State 94

   34 CallExpr: T_Identifier '(' Actuals • ')'

    ')'  shift, and go to state 116


State 95

   36 Actuals: Expr • PActuals
   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    T_Le   shift, and go to state 78
    T_Ge   shift, and go to state 79
    T_Eq   shift, and go to state 80
    T_Ne   shift, and go to state 81
    T_And  shift, and go to state 82
    T_Or   shift, and go to state 83
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87
    '*'    shift, and go to state 88
    '/'    shift, and go to state 89
    '%'    shift, and go to state 90

    $default  reduce using rule 31 (PActuals)

    PActuals  go to state 117


State 96

   41 TestExpr: '(' Expr • ')'
   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    T_Le   shift, and go to state 78
    T_Ge   shift, and go to state 79
    T_Eq   shift, and go to state 80
    T_Ne   shift, and go to state 81
    T_And  shift, and go to state 82
    T_Or   shift, and go to state 83
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87
    '*'    shift, and go to state 88
    '/'    shift, and go to state 89
    '%'    shift, and go to state 90
    ')'    shift, and go to state 118


State 97

   39 IfStmt: If TestExpr Then • StmtsBlock EndThen EndIf
   40       | If TestExpr Then • StmtsBlock EndThen Else StmtsBlock EndIf

    '{'  shift, and go to state 119

    StmtsBlock  go to state 120


State 98

   48 WhileStmt: While TestExpr Do • StmtsBlock EndWhile

    '{'  shift, and go to state 119

    StmtsBlock  go to state 121


State 99

   75 ReadInt: T_ReadInt '(' T_StringConstant • ')'

    ')'  shift, and go to state 122


State 100

   74 Expr: '(' Expr ')' •

    $default  reduce using rule 74 (Expr)


State 101

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   62     | Expr T_Le Expr •
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 62 (Expr)


State 102

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   61     | Expr T_Ge Expr •
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 61 (Expr)


State 103

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   63     | Expr T_Eq Expr •
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    T_Le  shift, and go to state 78
    T_Ge  shift, and go to state 79
    '<'   shift, and go to state 84
    '>'   shift, and go to state 85
    '+'   shift, and go to state 86
    '-'   shift, and go to state 87
    '*'   shift, and go to state 88
    '/'   shift, and go to state 89
    '%'   shift, and go to state 90

    $default  reduce using rule 63 (Expr)


State 104

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   64     | Expr T_Ne Expr •
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    T_Le  shift, and go to state 78
    T_Ge  shift, and go to state 79
    '<'   shift, and go to state 84
    '>'   shift, and go to state 85
    '+'   shift, and go to state 86
    '-'   shift, and go to state 87
    '*'   shift, and go to state 88
    '/'   shift, and go to state 89
    '%'   shift, and go to state 90

    $default  reduce using rule 64 (Expr)


State 105

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr
   66     | Expr T_And Expr •

    T_Le  shift, and go to state 78
    T_Ge  shift, and go to state 79
    T_Eq  shift, and go to state 80
    T_Ne  shift, and go to state 81
    '<'   shift, and go to state 84
    '>'   shift, and go to state 85
    '+'   shift, and go to state 86
    '-'   shift, and go to state 87
    '*'   shift, and go to state 88
    '/'   shift, and go to state 89
    '%'   shift, and go to state 90

    $default  reduce using rule 66 (Expr)


State 106

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   65     | Expr T_Or Expr •
   66     | Expr • T_And Expr

    T_Le   shift, and go to state 78
    T_Ge   shift, and go to state 79
    T_Eq   shift, and go to state 80
    T_Ne   shift, and go to state 81
    T_And  shift, and go to state 82
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87
    '*'    shift, and go to state 88
    '/'    shift, and go to state 89
    '%'    shift, and go to state 90

    $default  reduce using rule 65 (Expr)


State 107

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   60     | Expr '<' Expr •
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 60 (Expr)


State 108

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   59     | Expr '>' Expr •
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 59 (Expr)


State 109

   54 Expr: Expr • '+' Expr
   54     | Expr '+' Expr •
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 54 (Expr)


State 110

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   55     | Expr '-' Expr •
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 55 (Expr)


State 111

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   56     | Expr '*' Expr •
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    $default  reduce using rule 56 (Expr)


State 112

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   57     | Expr '/' Expr •
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    $default  reduce using rule 57 (Expr)


State 113

   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   58     | Expr '%' Expr •
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    $default  reduce using rule 58 (Expr)


State 114

   30 PrintStmt: T_Print '(' T_StringConstant PActuals • ')' ';'
   32 PActuals: PActuals • ',' Expr

    ')'  shift, and go to state 123
    ','  shift, and go to state 124


State 115

   29 AssignStmt: T_Identifier '=' Expr ';' •

    $default  reduce using rule 29 (AssignStmt)


State 116

   34 CallExpr: T_Identifier '(' Actuals ')' •

    $default  reduce using rule 34 (CallExpr)


State 117

   32 PActuals: PActuals • ',' Expr
   36 Actuals: Expr PActuals •

    ','  shift, and go to state 124

    $default  reduce using rule 36 (Actuals)


State 118

   41 TestExpr: '(' Expr ')' •

    $default  reduce using rule 41 (TestExpr)


State 119

   42 StmtsBlock: '{' • Stmts '}'

    $default  reduce using rule 19 (Stmts)

    Stmts  go to state 125


State 120

   39 IfStmt: If TestExpr Then StmtsBlock • EndThen EndIf
   40       | If TestExpr Then StmtsBlock • EndThen Else StmtsBlock EndIf

    $default  reduce using rule 45 (EndThen)

    EndThen  go to state 126


State 121

   48 WhileStmt: While TestExpr Do StmtsBlock • EndWhile

    $default  reduce using rule 51 (EndWhile)

    EndWhile  go to state 127


State 122

   75 ReadInt: T_ReadInt '(' T_StringConstant ')' •

    $default  reduce using rule 75 (ReadInt)


State 123

   30 PrintStmt: T_Print '(' T_StringConstant PActuals ')' • ';'

    ';'  shift, and go to state 128


State 124

   32 PActuals: PActuals ',' • Expr

    T_ReadInt      shift, and go to state 54
    T_IntConstant  shift, and go to state 55
    T_FltConstant  shift, and go to state 56
    T_Identifier   shift, and go to state 57
    '-'            shift, and go to state 58
    '!'            shift, and go to state 59
    '('            shift, and go to state 60

    CallExpr  go to state 62
    Expr      go to state 129
    ReadInt   go to state 64


State 125

   20 Stmts: Stmts • Stmt
   42 StmtsBlock: '{' Stmts • '}'

    T_Return      shift, and go to state 33
    T_Print       shift, and go to state 34
    T_While       shift, and go to state 35
    T_If          shift, and go to state 36
    T_Break       shift, and go to state 37
    T_Continue    shift, and go to state 38
    T_Identifier  shift, and go to state 39
    '}'           shift, and go to state 130

    Stmt          go to state 41
    AssignStmt    go to state 42
    PrintStmt     go to state 43
    CallStmt      go to state 44
    CallExpr      go to state 45
    ReturnStmt    go to state 46
    IfStmt        go to state 47
    If            go to state 48
    WhileStmt     go to state 49
    While         go to state 50
    BreakStmt     go to state 51
    ContinueStmt  go to state 52


State 126

   39 IfStmt: If TestExpr Then StmtsBlock EndThen • EndIf
   40       | If TestExpr Then StmtsBlock EndThen • Else StmtsBlock EndIf

    T_Else  shift, and go to state 131

    $default  reduce using rule 47 (EndIf)

    Else   go to state 132
    EndIf  go to state 133


State 127

   48 WhileStmt: While TestExpr Do StmtsBlock EndWhile •

    $default  reduce using rule 48 (WhileStmt)


State 128

   30 PrintStmt: T_Print '(' T_StringConstant PActuals ')' ';' •

    $default  reduce using rule 30 (PrintStmt)


State 129

   32 PActuals: PActuals ',' Expr •
   54 Expr: Expr • '+' Expr
   55     | Expr • '-' Expr
   56     | Expr • '*' Expr
   57     | Expr • '/' Expr
   58     | Expr • '%' Expr
   59     | Expr • '>' Expr
   60     | Expr • '<' Expr
   61     | Expr • T_Ge Expr
   62     | Expr • T_Le Expr
   63     | Expr • T_Eq Expr
   64     | Expr • T_Ne Expr
   65     | Expr • T_Or Expr
   66     | Expr • T_And Expr

    T_Le   shift, and go to state 78
    T_Ge   shift, and go to state 79
    T_Eq   shift, and go to state 80
    T_Ne   shift, and go to state 81
    T_And  shift, and go to state 82
    T_Or   shift, and go to state 83
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87
    '*'    shift, and go to state 88
    '/'    shift, and go to state 89
    '%'    shift, and go to state 90

    $default  reduce using rule 32 (PActuals)


State 130

   42 StmtsBlock: '{' Stmts '}' •

    $default  reduce using rule 42 (StmtsBlock)


State 131

   46 Else: T_Else •

    $default  reduce using rule 46 (Else)


State 132

   40 IfStmt: If TestExpr Then StmtsBlock EndThen Else • StmtsBlock EndIf

    '{'  shift, and go to state 119

    StmtsBlock  go to state 134


State 133

   39 IfStmt: If TestExpr Then StmtsBlock EndThen EndIf •

    $default  reduce using rule 39 (IfStmt)


State 134

   40 IfStmt: If TestExpr Then StmtsBlock EndThen Else StmtsBlock • EndIf

    $default  reduce using rule 47 (EndIf)

    EndIf  go to state 135


State 135

   40 IfStmt: If TestExpr Then StmtsBlock EndThen Else StmtsBlock EndIf •

    $default  reduce using rule 40 (IfStmt)
